#!/usr/bin/env bash

# Helpers
function redecho {
  printf "\e[00;31m${1}\e[00m\n"
}

function run {
  # Uncomment for debug all commands
  echo "   > $*"
  if $*; then
  # if $* &>/dev/null; then
    echo '   Done'
  else
    redecho '   FAILED!'
  fi
}

echo -- Give your admin password to start the installation
# Ask for the administrator password upfront
sudo -v
# Keep-alive: update existing `sudo` time stamp until `osx` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

echo -- Setting up profiles
CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
run cp ${CURRENT_DIR}/bash_profile ~/.bash_profile
# run cp ${CURRENT_DIR}/gemrc ~/.gemrc

echo -- Installing command line tools
run gcc --version

echo -- Installing Homebrew
run /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

packages=( htop tig gpg )
for package in "${packages[@]}"; do
 echo -- Installing homebrew package $package
 run brew instal $package
done

taps=( caskroom/drivers caskroom/fonts )
for tap in "${taps[@]}"; do
 echo -- Installing homebrew tap $tap
 run brew tap $tap
done

apps=( little-snitch alfred google-chrome dropbox atom appcleaner firefox microsoft-office skype slack spotify mactex transmission vlc 1password rubymine webstorm wacom-bamboo-tablet font-dejavu-sans-mono-for-powerline font-dejavu-sans font-dejavusansmono-nerd-font-mono font-dejavusansmono-nerd-font caffeine gpg-suite )
export HOMEBREW_CASK_OPTS="--appdir=/Applications"
for app in "${apps[@]}"; do
 echo -- Installing homebrew cask $app
 run brew cask instal $app
done

echo -- Installing RVM with latest ruby
run gpg --keyserver hkp://pgp.mit.edu --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
\curl -sSL https://get.rvm.io | bash -s stable --ruby

echo -- Install bundler
run gem install bundler

echo -- Setting OSX settings
run chflags nohidden ~/Library/

echo -- Give the path to the latest backup......
read BACKUP_PATH

if [ -z "$BACKUP_PATH" ]; then
  echo 'No path given so not restoring backups'
else
  echo -- Restore old ssh settings
  sudo cp -R "$BACKUP_PATH"/Users/`whoami`/.ssh ~/
  echo '   Done'

  echo -- Restore old keychains
  sudo cp -R "$BACKUP_PATH"/Users/`whoami`/Library/Keychains ~/Library
  echo '   Done'

  echo -- Restore old gpg keys
  sudo cp -R "$BACKUP_PATH"/Users/`whoami`/.gnupg* ~/
  echo '   Done'

  echo -- Restore git settings
  sudo cp -R "$BACKUP_PATH"/Users/`whoami`/.git* ~/
  echo '   Done'

  echo -- Restore aws settings
  sudo cp -R "$BACKUP_PATH"/Users/`whoami`/.aws ~/
  echo '   Done'

  # echo -- Restore dropbox
  # sudo cp -R "$BACKUP_PATH"/Users/`whoami`/Dropbox ~/Dropbox
  # echo '   Done'
fi

# Set Alfred to black
osascript -e 'tell application "Alfred 3" to set theme "Alfred macOS Dark"'

# osascript -e 'tell application "System Events" to tell appearance preferences to set dark mode to not dark mode'

# ###############################################################################
# # General UI/UX                                                               #
# ###############################################################################
#
# # Disable the sound effects on boot
# sudo nvram SystemAudioVolume=" "
#
# # Increase window resize speed for Cocoa applications
# defaults write NSGlobalDomain NSWindowResizeTime -float 0.001
#
# # Expand save panel by default
# defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
# defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true
#
# # Expand print panel by default
# defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
# defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true
#
# # Save to disk (not to iCloud) by default
# defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false
#
# # Automatically quit printer app once the print jobs complete
# defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true
#
# # Disable the “Are you sure you want to open this application?” dialog
# defaults write com.apple.LaunchServices LSQuarantine -bool false
#
# # Remove duplicates in the “Open With” menu (also see `lscleanup` alias)
# /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user
#
# # Disable Resume system-wide
# defaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false
#
# # Disable smart quotes as they’re annoying when typing code
# defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false
#
# # Disable smart dashes as they’re annoying when typing code
# defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

# Disable auto-correct
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

###############################################################################
# Finder                                                                      #
###############################################################################

# # Finder: disable window animations and Get Info animations
# defaults write com.apple.finder DisableAllAnimations -bool true

# Finder: show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Finder: show status bar
defaults write com.apple.finder ShowStatusBar -bool true

# When performing a search, search the current folder by default
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

# # Disable the warning when changing a file extension
# defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
#
# # Avoid creating .DS_Store files on network volumes
# defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
#
# # Disable disk image verification
# defaults write com.apple.frameworks.diskimages skip-verify -bool true
# defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
# defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true
#
# # Automatically open a new Finder window when a volume is mounted
# defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
# defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
# defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true
#
# # Use column view in all Finder windows by default
# # Four-letter codes for the other view modes: `icnv`, "Nlsv", `clmv`, `Flwv`
# defaults write com.apple.finder FXPreferredViewStyle -string "clmv"
#
# # Empty Trash securely by default
# defaults write com.apple.finder EmptyTrashSecurely -bool true
#
# # Show the ~/Library folder
# chflags nohidden ~/Library
#
# # Remove Dropbox’s green checkmark icons in Finder
# file=/Applications/Dropbox.app/Contents/Resources/emblem-dropbox-uptodate.icns
# [ -e "${file}" ] && mv -f "${file}" "${file}.bak"
#
# # Disable Dashboard
# defaults write com.apple.dashboard mcx-disabled -bool true
#
# # Don’t show Dashboard as a Space
# defaults write com.apple.dock dashboard-in-overlay -bool true
#
# # Don’t automatically rearrange Spaces based on most recent use
# defaults write com.apple.dock mru-spaces -bool false
#
# # Automatically hide and show the Dock
# defaults write com.apple.dock autohide -bool true
#
# ###############################################################################
# # Safari & WebKit                                                             #
# ###############################################################################
#
# # Privacy: don’t send search queries to Apple
# defaults write com.apple.Safari UniversalSearchEnabled -bool false
#
# # Show the full URL in the address bar (note: this still hides the scheme)
# defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true
#
# # Allow hitting the Backspace key to go to the previous page in history
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled -bool true
#
# # Enable Safari’s debug menu
# defaults write com.apple.Safari IncludeInternalDebugMenu -bool true
#
# # Enable the Develop menu and the Web Inspector in Safari
# defaults write com.apple.Safari IncludeDevelopMenu -bool true
# defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true
#
# ###############################################################################
# # Mail                                                                        #
# ###############################################################################
#
# # Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>` in Mail.app
# defaults write com.apple.mail AddressesIncludeNameOnPasteboard -bool false
